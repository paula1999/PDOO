/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.GUI;

import deepspace.SpaceStationToUI;
import deepspace.WeaponToUI;
import deepspace.ShieldToUI;
import java.util.ArrayList;
import java.awt.Component;
import deepspace.GameState;
import controller.Controller;

/**
 *
 * @author paula
 */
public class SpaceStationView extends javax.swing.JPanel {
    DamageView damageView;
    HangarView hangarView;
    
    /**
     * Creates new form SpaceStationView
     */
    public SpaceStationView() {
        initComponents();
        
        hangarView = new HangarView();
        damageView = new DamageView();
        pHangar.add(hangarView);
        //pDañoPendiente.add(damageView);
        
        repaint();
        revalidate();
    }
    
    void setSpaceStation (SpaceStationToUI sUI) {
        lNombre.setText(sUI.getName());
        lPAtaque.setText(Float.toString(sUI.getAmmoPower()));
        lPDefensa.setText(Float.toString(sUI.getShieldPower()));
        lNCombustible.setText(Float.toString(sUI.getFuelUnits()));
        lNMedallas.setText(Integer.toString(sUI.getnMedals()));
        pDañoPendiente.removeAll();
        
        if(sUI.getPendingDamage() != null){
            DamageView d = new DamageView();
            d.setDamage(sUI.getPendingDamage());
            pDañoPendiente.add(d);
        }
        
        GameState gameState = Controller.getInstance().getState();
        
        bDescartar.setEnabled(false);
        bDescartarHangar.setEnabled(false);
        bEquipar.setEnabled(false);
        
        if ((gameState == GameState.AFTERCOMBAT) || (gameState == GameState.INIT)) {
            bDescartarHangar.setEnabled(true);
            bDescartar.setEnabled(true);
            bEquipar.setEnabled(true);
        }
        
        if (sUI.validState()) {
            damageView.setVisible(false);
        }
        else {
            damageView.setDamage(sUI.getPendingDamage());
            damageView.setVisible(true);
        }
        
        if (sUI.getHangar() == null) {
            hangarView.setVisible(false);
            lSinHangar.setVisible(true);
        }
        else {
            lSinHangar.setVisible(false);
            hangarView.setHangar(sUI.getHangar());
            hangarView.setVisible(true);
        }
        
        pPFuego.removeAll();
        pPDefensa.removeAll();
        
        ArrayList<WeaponToUI> wUI = sUI.getWeapons();
        ArrayList<ShieldToUI> shUI = sUI.getShieldBoosters();
        WeaponView weaponView;
        ShieldBoosterView shieldBoosterView;
        
        for (WeaponToUI w : wUI) {
            weaponView = new WeaponView();
            weaponView.setWeapon(w);
            pPFuego.add(weaponView);
        }
        
        for (ShieldToUI sh : shUI) {
            shieldBoosterView = new ShieldBoosterView();
            shieldBoosterView.setShieldBooster(sh);
            pPDefensa.add(shieldBoosterView);
        }
        
        repaint();
        revalidate();
    }
    
    ArrayList<Integer> getSelectedWeapons (){
        ArrayList<Integer> selectedWeapons = new ArrayList();
        int i = 0;
        
        for (Component c : pPFuego.getComponents()){
            if (((WeaponView) c).isSelected())
                selectedWeapons.add(i);
            
            i++;
        }
        
        return selectedWeapons;   
    }
    
    ArrayList<Integer> getSelectedShields (){
        ArrayList<Integer> selectedShields = new ArrayList();
        int i = 0;
        
        for (Component c : pPDefensa.getComponents()){
            if (((ShieldBoosterView) c).isSelected())
                selectedShields.add(i);
            
            i++;
        }
        
        return selectedShields;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pDañoPendiente = new javax.swing.JPanel();
        lNombre = new javax.swing.JLabel();
        lPA = new javax.swing.JLabel();
        lPD = new javax.swing.JLabel();
        lPDefensa = new javax.swing.JLabel();
        lPAtaque = new javax.swing.JLabel();
        lNC = new javax.swing.JLabel();
        lM = new javax.swing.JLabel();
        lNCombustible = new javax.swing.JLabel();
        lNMedallas = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pPFuego = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        pPDefensa = new javax.swing.JPanel();
        pHangar = new javax.swing.JPanel();
        lSinHangar = new javax.swing.JLabel();
        bEquipar = new javax.swing.JButton();
        bDescartar = new javax.swing.JButton();
        bDescartarHangar = new javax.swing.JButton();

        pDañoPendiente.setBorder(javax.swing.BorderFactory.createTitledBorder("Daño pendiente"));

        lNombre.setFont(new java.awt.Font("padmaa-Bold.1.1", 0, 15)); // NOI18N
        lNombre.setForeground(new java.awt.Color(4, 101, 236));
        lNombre.setText("jLabel2");

        lPA.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lPA.setText("Potencia de ataque:");

        lPD.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lPD.setText("Potencia de defensa:");

        lPDefensa.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lPDefensa.setText("jLabel4");

        lPAtaque.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lPAtaque.setText("jLabel5");

        lNC.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lNC.setText("Nivel de combustible:");

        lM.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lM.setText("Medallas:");

        lNCombustible.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lNCombustible.setText("jLabel4");

        lNMedallas.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lNMedallas.setText("jLabel5");

        pPFuego.setBorder(javax.swing.BorderFactory.createTitledBorder("Potenciadores de Fuego"));
        jScrollPane1.setViewportView(pPFuego);

        pPDefensa.setBorder(javax.swing.BorderFactory.createTitledBorder("Potenciadores de Defensa"));
        jScrollPane2.setViewportView(pPDefensa);

        pHangar.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lSinHangar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        lSinHangar.setText("Sin hangar");
        pHangar.add(lSinHangar);

        bEquipar.setText("Equipar");
        bEquipar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEquiparActionPerformed(evt);
            }
        });

        bDescartar.setText("Descartar");
        bDescartar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDescartarActionPerformed(evt);
            }
        });

        bDescartarHangar.setText("Descartar hangar completo");
        bDescartarHangar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDescartarHangarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lNombre)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lPA)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lPAtaque))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lPD)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lPDefensa))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lNC)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lNCombustible))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bEquipar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bDescartar)
                                .addGap(18, 18, 18)
                                .addComponent(bDescartarHangar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lM)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lNMedallas)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(pDañoPendiente, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pHangar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lNombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lPAtaque)
                            .addComponent(lPA))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lPDefensa)
                            .addComponent(lPD))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lNC)
                            .addComponent(lNCombustible))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lM)
                            .addComponent(lNMedallas)))
                    .addComponent(pDañoPendiente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pHangar, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bEquipar)
                    .addComponent(bDescartar)
                    .addComponent(bDescartarHangar))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bEquiparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEquiparActionPerformed
        ArrayList<Integer> hWeapons = new ArrayList();
        ArrayList<Integer> hShields = new ArrayList();
        
        hangarView.getSelectedItems(hWeapons, hShields);
        Controller.getInstance().mount(hWeapons, hShields);
        MainWindow.getInstance().updateView();
    }//GEN-LAST:event_bEquiparActionPerformed

    private void bDescartarHangarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDescartarHangarActionPerformed
        Controller.getInstance().discardHangar();
        MainWindow.getInstance().updateView();
    }//GEN-LAST:event_bDescartarHangarActionPerformed

    private void bDescartarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDescartarActionPerformed
        ArrayList<Integer> w = getSelectedWeapons();
        ArrayList<Integer> s = getSelectedShields();
        ArrayList<Integer> hWeapons = new ArrayList();
        ArrayList<Integer> hShields = new ArrayList();
        
        Controller.getInstance().discard(Controller.WEAPON, w, s);
        Controller.getInstance().discard(Controller.SHIELD, w, s); 
        hangarView.getSelectedItems(hWeapons, hShields);
        Controller.getInstance().discard(Controller.HANGAR, hWeapons, hShields);
        MainWindow.getInstance().updateView();
    }//GEN-LAST:event_bDescartarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bDescartar;
    private javax.swing.JButton bDescartarHangar;
    private javax.swing.JButton bEquipar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lM;
    private javax.swing.JLabel lNC;
    private javax.swing.JLabel lNCombustible;
    private javax.swing.JLabel lNMedallas;
    private javax.swing.JLabel lNombre;
    private javax.swing.JLabel lPA;
    private javax.swing.JLabel lPAtaque;
    private javax.swing.JLabel lPD;
    private javax.swing.JLabel lPDefensa;
    private javax.swing.JLabel lSinHangar;
    private javax.swing.JPanel pDañoPendiente;
    private javax.swing.JPanel pHangar;
    private javax.swing.JPanel pPDefensa;
    private javax.swing.JPanel pPFuego;
    // End of variables declaration//GEN-END:variables
}
