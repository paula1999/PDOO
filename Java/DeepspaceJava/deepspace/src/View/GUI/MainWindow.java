/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.GUI;
import View.DeepSpaceView;
import controller.Controller;
import java.util.ArrayList;
import deepspace.GameState;
import deepspace.CombatResult;
import javax.swing.JOptionPane;

/**
 *
 * @author paula
 */
public class MainWindow extends javax.swing.JFrame implements DeepSpaceView {
    private static MainWindow instance = null;
    private String appName = "DeepSpace";
    private SpaceStationView spaceStationView;
    private EnemyView enemyView;
    
    public static MainWindow getInstance (){
        if (instance == null)
            instance = new MainWindow();
        
        return instance;
    }
    /**
     * Creates new form MainWindow
     */
    private MainWindow() {
        initComponents();
        
        spaceStationView = new SpaceStationView();
        enemyView = new EnemyView();
        pStation.add(spaceStationView);
        pEnemy.add(enemyView);
        setTitle(appName);
        repaint();
        
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing (java.awt.event.WindowEvent e) {
                Controller.getInstance().finish(0);
            }
        });
    }
    
    @Override
    public boolean confirmExitMessage() {
        return (JOptionPane.showConfirmDialog(this, "¿Estás segur@ que deseas salir?", getAppName(), JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION);
    }
    
    @Override
    public void conversionMessage() {
        JOptionPane.showMessageDialog(this,"Has GANADO el combate. \nAdemás te has CONVERTIDO. \nDisfruta de tu botín",getAppName(),JOptionPane.INFORMATION_MESSAGE);
    }
    
    @Override
    public void escapeMessage() {
        JOptionPane.showMessageDialog(this,"Has logrado escapar. \tEres una Gallina Espacial.",getAppName(),JOptionPane.INFORMATION_MESSAGE);
    }
    
    public String getAppName () {
        return appName;
    }
    
    @Override
    public void lostCombatMessage() {
        JOptionPane.showMessageDialog(this,"Has PERDIDO el combate.\tCumple tu castigo.",getAppName(),JOptionPane.INFORMATION_MESSAGE);
    }
    
    @Override
    public void nextTurnNotAllowedMessage() {
        JOptionPane.showMessageDialog(this,"No puedes avanzar de turno, no has cumplido tu castigo.",getAppName(),JOptionPane.INFORMATION_MESSAGE);
    }
    
    @Override
    public void noCombatMessage() {
                JOptionPane.showMessageDialog(this,"No puedes combatir en este momento",getAppName(),JOptionPane.INFORMATION_MESSAGE);
    }
    
    @Override
    public ArrayList<String> readNamePlayers () {
        NamesCapture namesCapt = new NamesCapture(this);
        
        return namesCapt.getNames();
    }
    
    @Override
    public void updateView () {
        GameState gameState = Controller.getInstance().getState();
        
        botonCombatir.setEnabled(false);
        botonSigTurno.setEnabled(true);
        
        if ((gameState == GameState.BEFORECOMBAT) || (gameState == GameState.INIT)) {
            botonCombatir.setEnabled(true);
            botonSigTurno.setEnabled(false);
        }
        
        spaceStationView.setSpaceStation(Controller.getInstance().getUIversion().getCurrentStation());
        enemyView.setEnemy(Controller.getInstance().getUIversion().getCurrentEnemy());
        enemyView.setVisible(false);
        
        if (gameState == GameState.AFTERCOMBAT)
            enemyView.setVisible(true);
        
        repaint();
    }
    
    @Override
    public void showView () {
        this.setVisible(true);
    }
    
    @Override
    public void wonCombatMessage() {
        JOptionPane.showMessageDialog(this,"Has GANADO el combate. \tDisfruta de tu botín.",getAppName(),JOptionPane.INFORMATION_MESSAGE);
    }
    
    @Override
    public void wonCombatAndTransformedMessage() {
        JOptionPane.showMessageDialog(this,"Has GANADO el combate y tu estación se ha TRANSFORMADO. \tDisfruta de tu botín.",getAppName(),JOptionPane.INFORMATION_MESSAGE);
    }
    
    @Override
    public void wonGameMessage() {
        JOptionPane.showMessageDialog(this,"\n\tHAS GANADO LA PARTIDA",getAppName(),JOptionPane.INFORMATION_MESSAGE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pStation = new javax.swing.JPanel();
        pEnemy = new javax.swing.JPanel();
        botonCombatir = new javax.swing.JButton();
        botonSigTurno = new javax.swing.JButton();
        botonSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pStation.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        pEnemy.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        botonCombatir.setText("Combatir");
        botonCombatir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCombatirActionPerformed(evt);
            }
        });

        botonSigTurno.setText("Siguiente turno");
        botonSigTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSigTurnoActionPerformed(evt);
            }
        });

        botonSalir.setText("Salir");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pStation, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(botonSigTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 103, Short.MAX_VALUE)
                        .addComponent(botonSalir))
                    .addComponent(botonCombatir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pEnemy, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pStation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pEnemy, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(botonCombatir, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botonSigTurno)
                            .addComponent(botonSalir))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonCombatirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCombatirActionPerformed
        Controller.getInstance().combat();
        updateView();
    }//GEN-LAST:event_botonCombatirActionPerformed

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        Controller.getInstance().finish(0);
    }//GEN-LAST:event_botonSalirActionPerformed

    private void botonSigTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSigTurnoActionPerformed
        Controller.getInstance().nextTurn();
        updateView();
    }//GEN-LAST:event_botonSigTurnoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCombatir;
    private javax.swing.JButton botonSalir;
    private javax.swing.JButton botonSigTurno;
    private javax.swing.JPanel pEnemy;
    private javax.swing.JPanel pStation;
    // End of variables declaration//GEN-END:variables
}
